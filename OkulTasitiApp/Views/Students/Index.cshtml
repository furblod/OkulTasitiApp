@model IEnumerable<OkulTasitiApp.Models.Student>


@{
    ViewData["Title"] = "Index";
}
<div class="text-center">
    <h1>Öğrenciler Listesi</h1>
</div>

<div class="text-center">
    <h3>AYARLAR</h3>
    <button id="startService" class="btn btn-success">Servise Başla</button>
    <button id="incomingStudents" class="btn btn-danger">Gelen Öğrenci Listesi</button>
    <button id="resetStudents" class="btn btn-warning">Servisi Bitir</button>
    <a class="btn btn-primary" asp-action="Create">Yeni Öğrenci Kayıt</a>
    <button id="schoolSettingsBtn" class="btn btn-primary" onclick="window.location.href='/School/Settings'">Okul Ayarları</button>



</div>

<div class="text-center">
    <h3>Okullar</h3>
    <select id="schoolSelector" class="form-control" style="display:inline-block; width: auto;">
        <option value="">Okul Seçin</option>
        @foreach (var school in ViewBag.Schools)
        {
            <option value="@school.SchoolID">@school.Name</option>
        }
    </select>


    <div class="text-center">
        <h3>Servis Seçimi</h3>
        <select id="shiftSelector" class="form-control" style="display:inline-block; width: auto;">
            <option value="">Servis Seçin</option>
            <option value="morning">Sabah Servisi</option>
            <option value="afternoon">Öğlen Servisi</option>
        </select>
    </div>
</div>

<!-- Öğrenciler Listesi -->
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.LastName)</th>
            <th>@Html.DisplayNameFor(model => model.GuardianName)</th>
            <th>@Html.DisplayNameFor(model => model.Address)</th>
            <th>@Html.DisplayNameFor(model => model.Price)</th>
            <th>@Html.DisplayNameFor(model => model.ShiftType)</th>
            <th>@Html.DisplayNameFor(model => model.School)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.GuardianName)</td>
                <td>@Html.DisplayFor(modelItem => item.Address)</td>
                <td>@Html.DisplayFor(modelItem => item.Price)</td>
                <td>@(item.ShiftType ? "Sabahçı" : "Öğlenci")</td>
                <td>@Html.DisplayFor(modelItem => item.School.Name)</td>
                <td>
                    <div class="flex-column">
                        <a class="btn btn-success btn-sm" asp-action="Edit" asp-route-id="@item.StudentID">Edit</a>
                        @*<a class="btn btn-primary" asp-action="Details" asp-route-id="@item.StudentID">Details</a>*@
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.StudentID">Delete</a>
                    </div>

                </td>
            </tr>
        }
    </tbody>
</table>
<div class="modal fade" id="incomingStudentsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Gelen Öğrenciler</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <!-- Form for attendance -->
                <form id="attendanceForm">
                    @foreach (var student in Model)
                    {
                        <div class="form-check" data-shift="@((student.ShiftType) ? "morning" : "afternoon")" data-school="@student.School.Name">
                            <input class="form-check-input" type="checkbox" id="student_@student.StudentID" name="student_@student.StudentID" value="@student.StudentID" @(student.IsComingToday ? "checked" : "")>
                            <label class="form-check-label">@student.FirstName @student.LastName</label>
                        </div>}
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                <button type="button" class="btn btn-primary" id="submitAttendance">Kaydet</button>
            </div>
        </div>
    </div>
</div>

<!-- Map -->
<div id="map" style="height: 500px; width: 100%;"></div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFsEdJXc4sEkif7h1lhR7GR5gEUU_dixM&libraries=directions&callback=initMap" async defer></script>

    <script type="text/javascript">
        let map, directionsService, directionsRenderer;

        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 38.9637, lng: 35.2433 }, // Türkiye'nin merkezi
                zoom: 6
            });

            directionsService = new google.maps.DirectionsService();
            directionsRenderer = new google.maps.DirectionsRenderer();
            directionsRenderer.setMap(map);
        }


        document.getElementById('incomingStudents').addEventListener('click', function () {
            // Okul ve Servis seçimlerini al
            const selectedSchool = document.getElementById('schoolSelector').value;
            const selectedShift = document.getElementById('shiftSelector').value;

            // Okul ve servis seçilmediyse uyarı göster
            if (!selectedSchool || !selectedShift) {
                alert("Lütfen bir okul ve servis seçin.");
                return;
            }

            // shiftType boolean olacak şekilde ayarlıyoruz
            var isMorningShift = selectedShift === "morning" ? true : false;

            $.get(`/Students/GetStudentsForModal?schoolId=${selectedSchool}&shiftType=${isMorningShift}`, function (students) {
                console.log(students); // Öğrenci listesini konsola yazdır
                if (students.length === 0) {
                    alert("Bu okul ve serviste öğrenci yok.");
                } else {
                    // Modal'ı temizle
                    $('#attendanceForm').empty();

                    // Gelen verileri modal'a ekle
                    students.forEach(student => {
                        $('#attendanceForm').append(`
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="student_${student.studentID}" name="student_${student.studentID}" value="${student.studentID}" ${student.isComingToday ? "checked" : ""}>
                            <label class="form-check-label">${student.firstName} ${student.lastName}</label>
                        </div>
                    `);
                    });

                    // Modal'ı göster
                    $('#incomingStudentsModal').modal('show');
                }
            }).fail(function () {
                console.error("Öğrenci verilerini alırken bir hata oluştu.");
                alert("Öğrenci verilerini alırken bir hata oluştu.");
            });
        });

        document.getElementById('submitAttendance').addEventListener('click', function () {
            const selectedSchool = document.getElementById('schoolSelector').value;
            const selectedShift = document.getElementById('shiftSelector').value;

            if (!selectedSchool) {
                alert("Lütfen bir okul seçin.");
                return;
            }

            // Seçilen öğrencilerin listesini al
            const selectedStudents = [];
            $('#attendanceForm input[type="checkbox"]:checked').each(function () {
                selectedStudents.push($(this).val());
            });

            if (selectedStudents.length === 0) {
                alert("Bu servis için gelecek öğrenci bulunamadı.");
                return;
            }

            // Okul adresini almak için istek yap
            $.get(`/Students/GetSchoolAddress?schoolId=${selectedSchool}`, function (schoolAddress) {
                if (!schoolAddress) {
                    alert("Seçilen okulun adresi bulunamadı.");
                } else {
                    console.log("Okul Adresi: " + schoolAddress);

                    // Öğrenci adreslerini almak için istek yap
                    $.post('/Students/GetStudentAddresses', { studentIds: selectedStudents }, function (studentAddresses) {
                        if (studentAddresses.length === 0) {
                            alert("Öğrenci adresleri alınamadı.");
                            return;
                        }

                        // Rotayı hesaplamak ve haritada göstermek için servisi başlat
                        //calculateAndDisplayRoute(studentAddresses, schoolAddress);
                        $('#incomingStudentsModal').modal('hide');
                        alert("Rota oluşturuldu. Servise başla butonuna basınız.")                     
                    });
                }
            }).fail(function () {
                alert("Okul adresi alınırken bir hata oluştu.");
            });
        });

        document.getElementById('startService').addEventListener('click', function () {
            const selectedSchool = document.getElementById('schoolSelector').value;
            const selectedShift = document.getElementById('shiftSelector').value;

            if (!selectedSchool) {
                alert("Lütfen bir okul seçin.");
                return;
            }

            if (!selectedShift) {
                alert("Lütfen bir servis (sabah/öğleden sonra) seçin.");
                return;
            }

            // Seçilen öğrencilerin listesini al
            const selectedStudents = [];
            $('#attendanceForm input[type="checkbox"]:checked').each(function () {
                selectedStudents.push($(this).val());
            });

            if (selectedStudents.length === 0) {
                alert("Bu servis için gelecek öğrenci bulunamadı.");
                return;
            }

            // Okul adresini almak için istek yap
            $.get(`/Students/GetSchoolAddress?schoolId=${selectedSchool}`, function (schoolAddress) {
                if (!schoolAddress) {
                    alert("Seçilen okulun adresi bulunamadı.");
                } else {
                    console.log("Okul Adresi: " + schoolAddress);

                    // Öğrenci adreslerini almak için istek yap
                    $.post('/Students/GetStudentAddresses', { studentIds: selectedStudents }, function (studentAddresses) {
                        if (studentAddresses.length === 0) {
                            alert("Öğrenci adresleri alınamadı.");
                            return;
                        }

                        // Rotayı hesaplamak ve haritada göstermek için servisi başlat
                        calculateAndDisplayRoute(studentAddresses, schoolAddress);                     
                    });
                }
            }).fail(function () {
                alert("Okul adresi alınırken bir hata oluştu.");
            });
        });


        document.getElementById('schoolSelector').addEventListener('change', function () {
            var selectedSchool = this.value;

            // Seçilen okul için modal'ın doldurulması
            $.get('/Students/GetStudentsBySchool', { schoolId: selectedSchool }, function (students) {
                var modalBody = $('#attendanceForm');
                modalBody.empty();

                if (students.length > 0) {
                    students.forEach(function (student) {
                        // Her öğrenci için checkbox oluştur
                        modalBody.append(`
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="student_${student.studentID}" name="student_${student.studentID}" value="${student.studentID}" ${(student.isComingToday ? 'checked' : '')}>
                            <label class="form-check-label">${student.firstName} ${student.lastName}</label>
                        </div>
                    `);
                    });
                } else {
                    modalBody.append("Bu okulda servise gelecek öğrenci yok.");
                }
            });
        });


        // "Servisi Bitir (Hepsini Ayarla)" butonuna tıklandığında
        document.getElementById('resetStudents').addEventListener('click', function () {
            $.post('/Students/ResetIsComingToday', function (response) {
                if (response.success) {
                    alert("Tüm öğrenciler için 'IsComingToday' true olarak ayarlandı.");
                    location.reload(); // Sayfayı yenileyerek güncellenmiş durumu göster
                } else {
                    alert(response.message);
                }
            });
        });

       



        function calculateAndDisplayRoute(studentAddresses, schoolAddress) {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    const driverLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    // Create waypoints for each student's address
                    const waypoints = studentAddresses.map(address => {
                        return { location: address, stopover: true };
                    });

                    // Use Google Maps directions service to calculate the route
                    directionsService.route({
                        origin: driverLocation, // Starting point: Driver's location
                        destination: schoolAddress, // Destination: School address
                        waypoints: waypoints, // Stops: Addresses of students
                        optimizeWaypoints: true,
                        travelMode: google.maps.TravelMode.DRIVING
                    }, function (response, status) {
                        if (status === 'OK') {
                            directionsRenderer.setDirections(response); // Render the route on the map
                        } else {
                            console.error('Rota oluşturulamadı: ' + status);
                        }
                    });
                }, function () {
                    console.error('Şoförün konumu alınamadı.');
                });
            } else {
                console.error('Tarayıcı konum desteği sağlamıyor.');
            }
        }

        function fetchSchoolAddress(schoolId) {
            $.getJSON(`/Students/GetSchoolAddress?schoolId=${schoolId}`, function (data) {
                if (data) {
                    calculateAndDisplayRoute(students, data);
                } else {
                    console.error('School address not found');
                }
            });
        }                  
    </script>
}
